use Carbon\Carbon;

public function verificarDia(Request $request)
{
    $data = Carbon::parse($request->input('data')); // recebe '2025-09-28' por exemplo

    if ($data->isSaturday()) {
        return response()->json(['dia' => 'sÃ¡bado', 'fim_de_semana' => true]);
    }

    if ($data->isSunday()) {
        return response()->json(['dia' => 'domingo', 'fim_de_semana' => true]);
    }

    return response()->json(['dia' => $data->locale('pt_BR')->translatedFormat('l'), 'fim_de_semana' => false]);
}

Carbon::parse($data) â†’ cria uma instÃ¢ncia de data.

isSaturday() e isSunday() â†’ verificam se o dia Ã© sÃ¡bado ou domingo.

translatedFormat('l') â†’ retorna o dia da semana em portuguÃªs.

@if(\Carbon\Carbon::parse($agendamento->data)->isWeekend())
    <span class="text-red-600">Fim de Semana</span>
@else
    <span class="text-green-600">Dia Ãštil</span>
@endif

isWeekend() jÃ¡ verifica se Ã© sÃ¡bado ou domingo de uma vez.


use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Models\Agendamento;

class AgendamentoController extends Controller
{
    public function store(Request $request)
    {
        $validated = $request->validate([
            'data' => 'required|date',
            'hora' => 'required',
            'nome' => 'required|string|max:255',
            // outros campos...
        ]);

        $data = Carbon::parse($validated['data']);

        // ðŸ”’ Bloqueio de sÃ¡bados e domingos
        if ($data->isWeekend()) {
            return redirect()->back()
                ->withErrors(['data' => 'NÃ£o Ã© permitido agendar em sÃ¡bados ou domingos.'])
                ->withInput();
        }

        // ðŸ”’ Bloqueio de feriados (se vocÃª tiver a tabela feriados no BD)
        if (\DB::table('feriados')->whereDate('data', $data)->exists()) {
            return redirect()->back()
                ->withErrors(['data' => 'NÃ£o Ã© permitido agendar em feriados.'])
                ->withInput();
        }

        // Se passou na validaÃ§Ã£o, salva normalmente
        Agendamento::create($validated);

        return redirect()->route('agendamentos.index')
            ->with('success', 'Agendamento criado com sucesso!');
    }
}
